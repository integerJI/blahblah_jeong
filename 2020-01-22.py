## 점프 투 파이썬 - 튜플 자료형

# 튜플과 리스트의 차이
# 리스트는 [ ]으로 둘러싸지만 튜플은 ( )으로 둘러싼다.
# 리스트는 그 값의 생성, 삭제, 수정이 가능하지만 튜플은 그 값을 바꿀 수 없다.

t2 = (1,) # 단지 1개의 요소만을 가질 때는 요소 뒤에 ,를 반드시 붙여야 한다.
t4 = 1,2,3 # ( )를 생략해도 무방하다.

# 튜플의 삭제와 수정
t1 = (1,2,'a','b')
del t1[0] >>> error
t1[0] = 'c' >>> error

# 튜플 다루기
t1 = (1,2,'a','b')
t1[0] >>> 1 # 문자열 다루기처럼 인덱싱이 가능하다.
t1[1:] >>> (2,'a','b')
t1 * 2 >>> (1,2,'a','b',1,2,'a','b')
len(t1) >>> 4

## 점프 투 파이썬 - 딕셔너리 자료형

# 딕셔너리의 기본 구조
{Key1:Value1, Key2:Value2, Key3:Value3, ...} # 키를 가져오면 보따리가 열린다.

# 딕셔너리의 예
a = {1 : 'hi'}
a[1] >>> 'hi' # 이렇게 a의 키값을 입력하면 얻더라
a = {'a' : [1,2,3]} # 리스트도 가능
a[1] >>> [1,2,3]

# 딕셔너리의 추가 삭제
a = {1 : 'a'}
a[6] = 'c' # 딕셔너리의 추가는 쌍을 입력해야한다.
a >>> {1:'a',6:'c'}

del a[1]
a >>> {6:'c'}

# 딕셔너리의 Key를 사용해 Value 얻기
grade = {'pey': 10, 'julliet': 99}
grade['pey'] >>> 10
grade['julliet'] >>> 99 # 거꾸로도 가능, 단 문자열은 '' 안에 넣어주자.

# 딕셔너리의 주의사항
a = {1:'a', 1:'b'} # Key의 값은 고유값이라 하나를 제외한 나머지가 모두 무시된다. 
a >>> {1: 'b'}

a = {[1,2] : 'hi'} >>> error # 따라서 고유한 값을 갖는 Key값에 리스트가 들어가면 오류가 발생한다.


